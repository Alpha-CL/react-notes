[{"/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/components/Problem/index.js":"1","/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/App.js":"2","/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/components/Problem/loginInfo.js":"3","/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/components/Problem/CustomRoute/index.js":"4","/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/index.js":"5"},{"size":4641,"mtime":1607689526806,"results":"6","hashOfConfig":"7"},{"size":866,"mtime":1607683788541,"results":"8","hashOfConfig":"7"},{"size":705,"mtime":1607687595337,"results":"9","hashOfConfig":"7"},{"size":1605,"mtime":1607689280774,"results":"10","hashOfConfig":"7"},{"size":744,"mtime":1606915398000,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"pmaxsj",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/components/Problem/index.js",["24","25","26","27","28","29"],"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport React, {useState,useEffect} from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport {BrowserRouter as Router, Route, Link, Switch, NavLink, Redirect} from \"react-router-dom\";\nimport \"./index.css\";\nimport {login, loginOut} from \"./loginInfo\";\nimport {ProtectedRoute} from \"./CustomRoute\";\nimport qs from \"query-string\";\n\n\n//-------------------------------------------------------------------------------------------------------------------//\n\n\n/**\n * <Route\n *\n ** render & children 都可以将返回的 ReactDom 渲染到页面中\n *\n **     render={()=>{           // 仅匹配成功后，才运行返回值渲染\n *\n *          return <ReactDom/>\n *      }\n *\n **     childrem={()=>{         // 无论是否匹配成功，都运行返回值渲染你\n *\n *          return <ReactDom/>\n *      }\n * />\n *\n *\n */\n\n\n//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//\n\n\nfunction Problem(props) {\n\n    return (\n\n        <React.Fragment>\n            <Router>\n                <div className=\"container\">\n                    <TopNav\n                        navsData={[\n                            {id: uuid(), name: 'Home', path: '/'},\n                            {id: uuid(), name: 'Login', path: '/login'},\n                            {id: uuid(), name: 'Personal', path: '/personal'},\n                        ]}\n                    />\n                    <div className=\"content\">\n                        <Switch>\n                            <Route path=\"/login\" component={Login} />\n                            <ProtectedRoute path=\"/personal\" component={Personal} />\n                            <Route path=\"/\" component={Home}/>\n                        </Switch>\n                    </div>\n                </div>\n            </Router>\n        </React.Fragment>\n    );\n}\n\nfunction TopNav(props) {\n\n    const navs = props.navsData.map(val => {\n\n        return (\n            <li key={val.id}>\n                <Link to={val.path}>{val.name}</Link>\n            </li>\n        );\n    });\n\n    return (\n\n        <React.Fragment>\n            <ul className=\"top_nav\">\n                {navs}\n            </ul>\n        </React.Fragment>\n    );\n}\n\nfunction Home(props) {\n\n    return (\n\n        <React.Fragment>\n            <div\n                className=\"page\"\n            >\n                <div className=\"page-hd\">\n                    <h1>Home_Page</h1>\n                </div>\n                <div className=\"page=con\">\n                    <p></p>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nfunction Login(props) {\n\n    const handleLogin = (e) => {\n\n        login();\n\n\n        // const query = qs.parse(props.location.search);\n        //\n        // if (query.returnurl) {\n        //\n        //     props.history.push(query.returnurl);\n        //\n        // } else {\n        //\n        //     props.history.push('/');\n        // }\n\n\n        if (props.location.state) {\n\n            props.history.push(props.location.state);\n\n        } else {\n\n            props.history.push('/');\n        }\n\n\n    }, handleLoginOut = (e) =>{\n\n        loginOut();\n    };\n\n    return (\n\n        <React.Fragment>\n            <div\n                className=\"page\"\n            >\n                <div className=\"page-hd\">\n                    <h1>Login_Page</h1>\n                </div>\n                <div className=\"page=con\">\n                    <p>该页面仅做测试，点击下方按钮即可登陆</p>\n                    <button\n                        onClick={handleLogin}\n                    >Login</button>\n                    <button\n                        onClick={handleLoginOut}\n                    >LoginOut</button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\nfunction Personal(props) {\n\n    return (\n\n        <React.Fragment>\n            <div\n                className=\"page\"\n            >\n                <div className=\"page-hd\">\n                    <h1>Personal_Page</h1>\n                </div>\n                <div className=\"page=con\">\n                    <p>若看到该页面，则表示已登陆</p>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n}\n\n\n//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//\n\n\nexport {\n\n    Problem\n};\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////","/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/App.js",[],"/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/components/Problem/loginInfo.js",[],"/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/components/Problem/CustomRoute/index.js",["30","31","32","33","34","35"],"///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\nimport {BrowserRouter as Router, Route, Link, Switch, NavLink, Redirect} from \"react-router-dom\";\nimport {isLogin, login, loginOut} from \"../loginInfo\";\n\n\n//-------------------------------------------------------------------------------------------------------------------//\n\n\nfunction ProtectedRoute({component: Comp, children, render, ...rest}) {\n\n    const handleRender = (context) => {\n\n        if (isLogin) {\n\n            return <Comp/>;\n\n        } else  {\n\n            alert('请先登陆，即将跳转至 Login_Page');\n\n            /** methods_01( 会显示在地址栏中 ): 将所需要传递的 地址参数 在 url 的 search 字段中传递 **/\n            // return <Redirect to={{\n            //     pathname: '/login',\n            //     search: '?returnurl=' + context.location.pathname\n            // }}/>;\n\n            /** methods_02( 不会显示在地址栏中 ): 将所需要传递的 地址参数 在 state 中传递 **/\n            return <Redirect to={{\n                pathname: '/login',\n                state: context.location.pathname\n            }}/>;\n        }\n    };\n\n    return (\n\n        <Route\n            {...rest}\n            render={handleRender}\n        />\n    );\n}\n\n\n//- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//\n\n\nexport {\n\n    ProtectedRoute\n};\n\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n","/Users/lalpha/SynologyDrive/Drive/dlp/dlp-lrn/GitHub/Framework-library-note/03-react/Example/Ex1.5.00/05-router_example-custom_router_of_login_authorization/src/index.js",[],{"ruleId":"36","severity":1,"message":"37","line":4,"column":16,"nodeType":"38","messageId":"39","endLine":4,"endColumn":24},{"ruleId":"36","severity":1,"message":"40","line":4,"column":25,"nodeType":"38","messageId":"39","endLine":4,"endColumn":34},{"ruleId":"36","severity":1,"message":"41","line":6,"column":8,"nodeType":"38","messageId":"39","endLine":6,"endColumn":17},{"ruleId":"36","severity":1,"message":"42","line":7,"column":55,"nodeType":"38","messageId":"39","endLine":7,"endColumn":62},{"ruleId":"36","severity":1,"message":"43","line":7,"column":64,"nodeType":"38","messageId":"39","endLine":7,"endColumn":72},{"ruleId":"36","severity":1,"message":"44","line":11,"column":8,"nodeType":"38","messageId":"39","endLine":11,"endColumn":10},{"ruleId":"36","severity":1,"message":"45","line":4,"column":26,"nodeType":"38","messageId":"39","endLine":4,"endColumn":32},{"ruleId":"36","severity":1,"message":"46","line":4,"column":41,"nodeType":"38","messageId":"39","endLine":4,"endColumn":45},{"ruleId":"36","severity":1,"message":"47","line":4,"column":47,"nodeType":"38","messageId":"39","endLine":4,"endColumn":53},{"ruleId":"36","severity":1,"message":"42","line":4,"column":55,"nodeType":"38","messageId":"39","endLine":4,"endColumn":62},{"ruleId":"36","severity":1,"message":"48","line":5,"column":18,"nodeType":"38","messageId":"39","endLine":5,"endColumn":23},{"ruleId":"36","severity":1,"message":"49","line":5,"column":25,"nodeType":"38","messageId":"39","endLine":5,"endColumn":33},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'PropTypes' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'qs' is defined but never used.","'Router' is defined but never used.","'Link' is defined but never used.","'Switch' is defined but never used.","'login' is defined but never used.","'loginOut' is defined but never used."]